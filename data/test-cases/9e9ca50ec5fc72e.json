{"uid":"9e9ca50ec5fc72e","name":"Basic addition","fullName":"features/example.feature:Basic addition","historyId":"0458ac243ce0cfa7b75550a2706565f8.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1751540481052,"stop":1751540481054,"duration":2},"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"fixturefunc = <function _ at 0x7f1a50a10c20>\nrequest = <FixtureRequest for <Function test_basic_addition>>\nkwargs = {'result': 3}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if inspect.isgeneratorfunction(fixturefunc):\n            fixturefunc = cast(Callable[..., Generator[FixtureValue]], fixturefunc)\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n                             ^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = 3\n\n    @then(\"the result should be 3\")\n    def _(result):\n>       assert result == 2\nE       assert 3 == 2\n\ntests/test_example.py:19: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":28,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"fixturefunc = <function _ at 0x7f1a50a10c20>\nrequest = <FixtureRequest for <Function test_basic_addition>>\nkwargs = {'result': 3}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if inspect.isgeneratorfunction(fixturefunc):\n            fixturefunc = cast(Callable[..., Generator[FixtureValue]], fixturefunc)\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n                             ^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = 3\n\n    @then(\"the result should be 3\")\n    def _(result):\n>       assert result == 2\nE       assert 3 == 2\n\ntests/test_example.py:19: AssertionError","steps":[{"name":"Given I have two numbers","time":{"start":1751540481052,"stop":1751540481052,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When I add them","time":{"start":1751540481052,"stop":1751540481053,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"numbers","value":"(1, 2)"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Then the result should be 3","time":{"start":1751540481053,"stop":1751540481053,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 929, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/bdd-test-poc/bdd-test-poc/tests/test_example.py\", line 19, in _\n    assert result == 2\n","steps":[],"attachments":[],"parameters":[{"name":"result","value":"3"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"1937-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Example"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"120716ca6932edbb","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751540208828,"stop":1751540208831,"duration":3}},{"uid":"564b68ccb8af2189","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751536650920,"stop":1751536650922,"duration":2}},{"uid":"b54f2d6eee904081","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751273546219,"stop":1751273546220,"duration":1}},{"uid":"786125eb694fe0d1","status":"passed","time":{"start":1751273346728,"stop":1751273346728,"duration":0}},{"uid":"e5973111c0b6947","status":"passed","time":{"start":1751273153426,"stop":1751273153427,"duration":1}},{"uid":"c0fc847854c32c35","status":"passed","time":{"start":1751272963004,"stop":1751272963006,"duration":2}},{"uid":"3f941b5d150f2c7c","status":"passed","time":{"start":1751272845737,"stop":1751272845738,"duration":1}},{"uid":"76d1450a608d1e36","status":"passed","time":{"start":1751272736829,"stop":1751272736830,"duration":1}},{"uid":"a673f6588cba1a9e","status":"passed","time":{"start":1751272601699,"stop":1751272601700,"duration":1}},{"uid":"93c421eee600399","status":"passed","time":{"start":1751272450560,"stop":1751272450561,"duration":1}},{"uid":"85b6fa3eb363ca8e","status":"passed","time":{"start":1751272209989,"stop":1751272209990,"duration":1}},{"uid":"acbf926d13d7a235","status":"passed","time":{"start":1751270349522,"stop":1751270349523,"duration":1}},{"uid":"b8bf46f6433483c0","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751269883437,"stop":1751269883439,"duration":2}},{"uid":"bb09cc42942836de","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751269416220,"stop":1751269416222,"duration":2}},{"uid":"773a41864fc87404","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751269415845,"stop":1751269415847,"duration":2}},{"uid":"3878a449ec752ec4","status":"passed","time":{"start":1751268907102,"stop":1751268907103,"duration":1}},{"uid":"279c702631b5b73e","status":"passed","time":{"start":1751268906760,"stop":1751268906761,"duration":1}},{"uid":"ac413af9688c83d9","status":"passed","time":{"start":1751268442784,"stop":1751268442786,"duration":2}},{"uid":"23aec6259c186225","status":"passed","time":{"start":1750410023517,"stop":1750410023518,"duration":1}},{"uid":"d2c019a539b5c2ae","status":"passed","time":{"start":1750409829456,"stop":1750409829457,"duration":1}},{"uid":"2787f942da31fcef","status":"passed","time":{"start":1750409530130,"stop":1750409530131,"duration":1}},{"uid":"e87dfbfe5d0cad85","status":"passed","time":{"start":1750409138799,"stop":1750409138800,"duration":1}},{"uid":"72712cf2b1dba23e","status":"passed","time":{"start":1750408693373,"stop":1750408693376,"duration":3}},{"uid":"a3f12a29900487d0","status":"passed","time":{"start":1750407999884,"stop":1750407999885,"duration":1}},{"uid":"5d37e5d2dd1a3354","status":"passed","time":{"start":1750407949650,"stop":1750407949651,"duration":1}},{"uid":"c197c28553941986","status":"passed","time":{"start":1750407671571,"stop":1750407671572,"duration":1}},{"uid":"bdfa04e08ca2bce4","status":"passed","time":{"start":1750407151510,"stop":1750407151511,"duration":1}},{"uid":"66d7f751b0a3a454","status":"passed","time":{"start":1750406852062,"stop":1750406852063,"duration":1}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"9e9ca50ec5fc72e.json","parameterValues":[]}