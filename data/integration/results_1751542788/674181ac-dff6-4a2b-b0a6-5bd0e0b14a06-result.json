{"name": "Basic addition", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 == 2", "trace": "fixturefunc = <function _ at 0x7f76e3804c20>\nrequest = <FixtureRequest for <Function test_basic_addition>>\nkwargs = {'result': 3}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if inspect.isgeneratorfunction(fixturefunc):\n            fixturefunc = cast(Callable[..., Generator[FixtureValue]], fixturefunc)\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n                             ^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = 3\n\n    @then(\"the result should be 3\")\n    def _(result):\n>       assert result == 2\nE       assert 3 == 2\n\ntests/test_example.py:19: AssertionError"}, "steps": [{"name": "Given I have two numbers", "status": "passed", "start": 1751542787955, "stop": 1751542787955}, {"name": "When I add them", "status": "passed", "parameters": [{"name": "numbers", "value": "(1, 2)"}], "start": 1751542787955, "stop": 1751542787956}, {"name": "Then the result should be 3", "status": "failed", "statusDetails": {"message": "AssertionError: assert 3 == 2\n", "trace": "  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 929, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/bdd-test-poc/bdd-test-poc/tests/test_example.py\", line 19, in _\n    assert result == 2\n"}, "parameters": [{"name": "result", "value": "3"}], "start": 1751542787956, "stop": 1751542787957}], "start": 1751542787955, "stop": 1751542787957, "uuid": "d9021028-536e-80af-396f-8781c4f4df93", "historyId": "0458ac243ce0cfa7b75550a2706565f8.d41d8cd98f00b204e9800998ecf8427e", "testCaseId": "0458ac243ce0cfa7b75550a2706565f8", "fullName": "features/example.feature:Basic addition", "labels": [{"name": "host", "value": "pkrvmbietmlfzoi"}, {"name": "thread", "value": "2014-MainThread"}, {"name": "framework", "value": "pytest-bdd"}, {"name": "language", "value": "cpython3"}, {"name": "feature", "value": "Example"}]}