{"uid":"6ef0364beb022d76","name":"Basic addition","fullName":"features/example.feature:Basic addition","historyId":"0458ac243ce0cfa7b75550a2706565f8.d41d8cd98f00b204e9800998ecf8427e","time":{"start":1751269416220,"stop":1751269416222,"duration":2},"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"fixturefunc = <function _ at 0x7f5927c8f4c0>\nrequest = <FixtureRequest for <Function test_basic_addition>>\nkwargs = {'result': 3}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if inspect.isgeneratorfunction(fixturefunc):\n            fixturefunc = cast(Callable[..., Generator[FixtureValue]], fixturefunc)\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n                             ^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = 3\n\n    @then(\"the result should be 3\")\n    def _(result):\n>       assert result == 2\nE       assert 3 == 2\n\ntests/test_example.py:19: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":14,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 3 == 2","statusTrace":"fixturefunc = <function _ at 0x7f5927c8f4c0>\nrequest = <FixtureRequest for <Function test_basic_addition>>\nkwargs = {'result': 3}\n\n    def call_fixture_func(\n        fixturefunc: _FixtureFunc[FixtureValue], request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if inspect.isgeneratorfunction(fixturefunc):\n            fixturefunc = cast(Callable[..., Generator[FixtureValue]], fixturefunc)\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n                             ^^^^^^^^^^^^^^^^^^^^^\n\n/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py:929: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresult = 3\n\n    @then(\"the result should be 3\")\n    def _(result):\n>       assert result == 2\nE       assert 3 == 2\n\ntests/test_example.py:19: AssertionError","steps":[{"name":"Given I have two numbers","time":{"start":1751269416220,"stop":1751269416220,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When I add them","time":{"start":1751269416221,"stop":1751269416221,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"numbers","value":"(1, 2)"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Then the result should be 3","time":{"start":1751269416221,"stop":1751269416222,"duration":1},"status":"failed","statusMessage":"AssertionError: assert 3 == 2\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/pytest_bdd/scenario.py\", line 240, in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=context.step_func, request=request, kwargs=kwargs)\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/site-packages/_pytest/fixtures.py\", line 929, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/bdd-test-poc/bdd-test-poc/tests/test_example.py\", line 19, in _\n    assert result == 2\n","steps":[],"attachments":[],"parameters":[{"name":"result","value":"3"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"pkrvmbietmlfzoi"},{"name":"thread","value":"2052-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Example"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"90510f44d6479d0b","status":"failed","statusDetails":"AssertionError: assert 3 == 2","time":{"start":1751269415845,"stop":1751269415847,"duration":2}},{"uid":"66fda959290d1cc7","status":"passed","time":{"start":1751268907102,"stop":1751268907103,"duration":1}},{"uid":"bc674fcde4779263","status":"passed","time":{"start":1751268906760,"stop":1751268906761,"duration":1}},{"uid":"40738e0131c1092b","status":"passed","time":{"start":1751268442784,"stop":1751268442786,"duration":2}},{"uid":"7a91070744cd4c32","status":"passed","time":{"start":1750410023517,"stop":1750410023518,"duration":1}},{"uid":"8dc1d860a0ac816a","status":"passed","time":{"start":1750409829456,"stop":1750409829457,"duration":1}},{"uid":"3463b7c9f6419958","status":"passed","time":{"start":1750409530130,"stop":1750409530131,"duration":1}},{"uid":"72cac2a7f32efe25","status":"passed","time":{"start":1750409138799,"stop":1750409138800,"duration":1}},{"uid":"4b61345fe8ebf832","status":"passed","time":{"start":1750408693373,"stop":1750408693376,"duration":3}},{"uid":"9c38ba5d69064c7a","status":"passed","time":{"start":1750407999884,"stop":1750407999885,"duration":1}},{"uid":"1cadf433c303ef39","status":"passed","time":{"start":1750407949650,"stop":1750407949651,"duration":1}},{"uid":"470753d7b1c1ae9a","status":"passed","time":{"start":1750407671571,"stop":1750407671572,"duration":1}},{"uid":"1cc1fd36e9f9b642","status":"passed","time":{"start":1750407151510,"stop":1750407151511,"duration":1}},{"uid":"95dd0703116452c","status":"passed","time":{"start":1750406852062,"stop":1750406852063,"duration":1}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"6ef0364beb022d76.json","parameterValues":[]}